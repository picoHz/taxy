on:
  push:
    tags:
      - "v*"

name: Upload Release Assets

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux:
    name: Upload Release Assets (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: rui314/setup-mold@v1
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.10.3
      - name: Install trunk
        run: cargo binstall trunk --force -y
      - name: Add toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Build webui
        run: cd taxy-webui && trunk build --cargo-profile web-release --release
      - name: Build project
        run: cargo b --bin taxy --release
      - name: Make archive
        run: tar -C target/release -Jcvf taxy-x86_64-unknown-linux-gnu.tar.xz taxy
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes --draft
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*

  release-windows:
    name: Upload Release Assets (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: msys2/setup-msys2@v2
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.10.3
      - name: Install trunk
        run: cargo binstall trunk --force -y
      - name: Add toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Build webui
        run: cd taxy-webui && trunk build --cargo-profile web-release --release && cargo clean
      - name: Build project
        run: cargo b --bin taxy --release
      - name: Make archive
        run: tar -C target/release -acf taxy-x86_64-pc-windows-msvc.zip taxy.exe
      - name: Make archive
        run: msys2 -c 'cp target/release/taxy.exe . && tar cf taxy-x86_64-pc-windows-msvc.tar taxy.exe && xz *.tar'
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes --draft
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} taxy-x86_64-pc-windows-msvc.zip taxy-x86_64-pc-windows-msvc.tar.xz

  release-macos:
    name: Upload Release Assets (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.10.3
      - name: Install trunk
        run: cargo binstall trunk --force -y
      - name: Add toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Build webui
        run: cd taxy-webui && trunk build --cargo-profile web-release --release
      - name: Build project
        run: cargo b --bin taxy --release
      - name: Make archive
        run: tar -C target/release -Jcvf taxy-x86_64-apple-darwin.tar.xz taxy
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes --draft
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*

  release-macos-cross:
    name: Upload Release Assets (macOS)
    strategy:
      matrix:
        toolchain: [aarch64-apple-darwin]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.toolchain }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install toolchain
        run: rustup target add ${{ matrix.toolchain }}
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.10.3
      - name: Install trunk
        run: cargo binstall trunk --force -y
      - name: Add toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Build webui
        run: cd taxy-webui && trunk build --cargo-profile web-release --release
      - name: Build project
        run: cargo b --bin taxy --release --target ${{ matrix.toolchain }}
      - name: Make archive
        run: tar -C target/${{ matrix.toolchain }}/release -Jcvf taxy-${{ matrix.toolchain }}.tar.xz taxy
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes --draft
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*

  release-cross:
    strategy:
      matrix:
        toolchain:
          [
            aarch64-unknown-linux-gnu,
            armv7-unknown-linux-gnueabihf,
          ]
    name: Upload Release Assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.toolchain }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.10.3
      - name: Install trunk
        run: cargo binstall trunk --force -y
      - name: Install cross
        run: cargo binstall cross --force -y
      - name: Add toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Build webui
        run: cd taxy-webui && trunk build --cargo-profile web-release --release && cargo clean
      - name: Build project
        run: cross build -p taxy --release --target ${{ matrix.toolchain }}
      - name: Make archive
        run: tar -C target/${{ matrix.toolchain }}/release -Jcvf taxy-${{ matrix.toolchain }}.tar.xz taxy
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes --draft
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*
